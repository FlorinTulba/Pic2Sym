;/*###########################################################################################
; This file contains many configurable settings and texts necessary in the Pic2Sym application.
; When the application starts, it reads and uses the values from this file found at that time.
;#############################################################################################

;========================
; Configurable Constants
;========================
; Switch to choose between transforming the original image, or its blurred version
Transform_BlurredPatches_InsteadOf_Originals	false

; Switches for OpenMP - parallel operations / loops:
UsingOMP	true
ParallelizePixMapStatistics	true
ParallelizeGridCreation	true
ParallelizeGridPopulation	true
PrepareMoreGlyphsAtOnce	true
ParallelizeTr_PatchRowLoops	true

; Constants for the sliders controlling the range of each matching aspect
ControlPanel_Converter_StructuralSim_maxSlider	100
ControlPanel_Converter_StructuralSim_maxReal	2.5
ControlPanel_Converter_Correctness_maxSlider	100
ControlPanel_Converter_Correctness_maxReal	2.5
ControlPanel_Converter_Contrast_maxSlider	100
ControlPanel_Converter_Contrast_maxReal	2.5
ControlPanel_Converter_Gravity_maxSlider	100
ControlPanel_Converter_Gravity_maxReal	2.
ControlPanel_Converter_Direction_maxSlider	100
ControlPanel_Converter_Direction_maxReal	2.
ControlPanel_Converter_LargerSym_maxSlider	100
ControlPanel_Converter_LargerSym_maxReal	1.

; Values for batching symbols to enhance gradually the result and display such drafts. See below for details.
; There's a simple technique to deliver drafts while transforming the image - charmap partitioning:
; The charmap is divided in groups of symbols of adjustable size and a new draft result is generated
; considering the glyphs from the next batch.
SymsBatch_trackMax	100
SymsBatch_defaultSz	25

; Values for the Transparency slider from the Comparator window
Comparator_trackMax	100
Comparator_defaultTransparency	.25

; Values for the Charmap Inspector window
CmapInspect_width	640
CmapInspect_height	480

; If interested in the histogram representing the distribution of the weights of the symbols
; set this flag to true
ViewSymWeightsHistogram	false

; Limits for the Settings
Settings_MIN_FONT_SIZE	7
Settings_MAX_FONT_SIZE	50
Settings_DEF_FONT_SIZE	10
Settings_MAX_THRESHOLD_FOR_BLANKS	50
Settings_MIN_H_SYMS	3
Settings_MAX_H_SYMS	1024
Settings_MIN_V_SYMS	3
Settings_MAX_V_SYMS	768

; Frequency of progress updates during the approximation process:
; 0.05 means reporting every 5%
Transform_ProgressReportsIncrement	0.01

; Frequency of progress updates during the symbol set processing:
; 0.05 means reporting every 5%
SymbolsProcessing_ProgressReportsIncrement	0.01

; When finding the best symbol approximating for a patch, some of the symbols are
; unlikely to have a chance against a previously found good match.
; This fact can be obvious after evaluating only a few matching aspects,
; without scoring all enabled matching aspects.
; However, this heuristic appears inefficient when the image has finely-grained texture,
; when there are many competing potential matches for most of the patches from the image.
UseSkipMatchAspectsHeuristic	true

; The Aspects Skipping heuristic comes with a slight cost which becomes noticeable when:
; - there are barely any skipped matching aspects
; - these very few skipped aspects are not complex
; In such cases the heuristic probably won't shorten the transformation time.
; The heuristic starts getting more efficient only after finding a really good draft match for the patch.
; This justifies introducing a threshold for the score of a draft. As long as the draft matches
; for a given patch score under this threshold, the heuristic isn't used. The first draft match
; above the threshold enables the heuristic.
; The threshold is provided as a percentage (0..1 range) from the maximum score (for an ideal match)
EnableSkipAboveMatchRatio	0.125


; The image approximation by symbols could be accelerated by preselecting just several candidate symbols.
; The preselection might be accomplished based on the same matching aspects, but using shrunken
; versions of the image patches and symbols.
; Also clustering the symbols used for approximation is performed faster by grouping the smaller
; versions of the symbols.
; Setting a unique tiny size for the symbols has the advantage that it can be used for all
; actual symbol sizes, thus it can be computed only once and stored on disk for eventual later reuses.
PreselectionByTinySyms	true

; Length of the preselected candidate symbols
; Must be > 0
ShortListLength	2

; Accept tiny symbols candidates on the short list even for a lower score than from the best match
; Range 0.8 .. 1
AdmitOnShortListEvenForInferiorScoreFactor	0.999

; Size of the fonts used when providing support for faster clustering and for symbols preselection.
; Must be an odd value between 5 and 9.
; To be used through function 'extern unsigned TinySymsSz()'
TinySymsSize	5

; Which symbol clusters to investigate?
; The constant below allows checking also those clusters whose score appears
; slightly inferior to the best score known at a moment
InvestigateClusterEvenForInferiorScoreFactor	0.999

; Choose to use or not heuristics for clustering to quicken the computation of the distance between
; the centroid of a cluster and a given symbol, not clustered yet.
; For large symbol sets, the speed-up coming from these heuristics was around 10 times
; at the time when this switch was introduced
FastDistSymToClusterComputation	true

; The name of the clustering algorithm. These options are available:
; - None -> no clustering at all
; - Partition -> pseudo-clustering algorithm using boolean predicate instead of distance-based assessments
; - TTSAS -> implementation of the "Two-Threshold Sequential Algorithmic Scheme" clustering algorithm
ClusterAlgName	TTSAS

; Max L1 error per pixel between the projections of 2 symbols that can be clustered together
MaxAvgProjErrForPartitionClustering	0.0125

; Maximum difference of the average pixel value from 2 symbols that still allows clustering the glyphs
MaxDiffAvgPixelValForPartitionClustering	0.01
MaxDiffAvgPixelValForTTSAS_Clustering	0.04

; Maximum offset between mass-centers of 2 symbols (relative to the symbol size) allowed to
; still consider clustering the glyphs together
MaxRelMcOffsetForPartitionClustering	0.01
MaxRelMcOffsetForTTSAS_Clustering	0.04

; TTSAS can run faster by accepting as parent cluster the first group close enough to the analyzed symbol
; or it won't stop before making sure it has found the closest cluster to the given symbol
TTSAS_Accept1stClusterThatQualifiesAsParent	false

; Threshold for including any symbol into a cluster in the TTSAS algorithm
TTSAS_Threshold_Member	0.044

; Threshold for the average cluster size below which the image transformation process is slowed down
; by grouping the symbols together when comparing them against the patches
; Needs to be >= 1
MinAverageClusterSize	1.12

; What percent (0..1) of the glyphs from a charmap set are considered small
; 0.1 means that smallest 10% of all glyphs are considered small
PmsCont_SMALL_GLYPHS_PERCENT	0.1

; Switches for symbol filters that can remove specific categories of undesired glyphs
BulkySymsFilterEnabled			true
UnreadableSymsFilterEnabled		true
SievesSymsFilterEnabled			true
FilledRectanglesFilterEnabled	true
GridBarsFilterEnabled			true

; Switch that allows visualizing the symbols that normally are removed in the Cmap Viewer
; Note they will appear inverted and they also will participate in the matching process
PreserveRemovableSymbolsForExamination	false

; Detection of unreadable glyphs
; MinAreaRatioForUnreadableSymsBB is in 0..1 range
; ForegroundThresholdDelta is in 0..255 range
; StillForegroundThreshold brightness threshold (1/255 =~ 0.004)
MinAreaRatioForUnreadableSymsBB	.2
StillForegroundThreshold	0.002
ForegroundThresholdDelta	10.

; Constant for background threshold
; 1/255 = 0.00392, so 0.004 tolerates pixels with 1 brightness unit less / more than ideal
; STILL_BG was set to 0, as there are font families with extremely similar glyphs.
; When Unit Testing shouldn't identify exactly each glyph, STILL_BG might be > 0.
; But testing on 'BPmonoBold.ttf' does tolerate such larger values (0.025, for instance).
SymData_computeFields_STILL_BG	0.

; Blurred Patches with Contrast less than this value will become part of the result.
; No approximation will be performed for such patches.
; Max Contrast is 255.
Transformer_run_THRESHOLD_CONTRAST_BLURRED	7.

; Constant for the Directional Smoothness aspect
; See comment from CachedData::useNewSymSize about this constant
DirSmooth_DesiredBaseForCenterAndCornerMcs	.95

; Constants for Structural Similarity aspect
; C1 = (.01*255)^2   ;   C2 = (.03*255)^2
; Blur type can be:
;	- box - BoxBlur with a single iteration
;	- ext_box - ExtBoxBlur with a single iteration
;	- stack - StackBlur adapted for desired standard deviation
;	- gaussian - the reference GaussBlur
StructuralSimilarity_BlurType	box
StructuralSimilarity_RecommendedWindowSide	11
StructuralSimilarity_SIGMA	1.5
StructuralSimilarity_C1	6.5025
StructuralSimilarity_C2	58.5225

; Typical Blur parameters
BlurWindowSize	11
BlurStandardDeviation	1.5

;==============================
; Configurable Texts or Labels
;==============================
; Label of the transparency slider from the Comparator window
Comparator_transpTrackName	"Transparency %"

; Label of the page slider from the Charmap Inspector window
CmapInspect_pageTrackName	"Cmap Page:"

; Labels of the buttons and sliders from the Control Panel
ControlPanel_selectImgLabel	"Select an Image"
ControlPanel_transformImgLabel	"Transform the Image"
ControlPanel_selectFontLabel	"Select a Scalable, preferably also Monospaced Font Family"
ControlPanel_restoreDefaultsLabel	"Restore defaults for values below"
ControlPanel_saveAsDefaultsLabel	"Set as defaults the values below"
ControlPanel_aboutLabel	"About"
ControlPanel_instructionsLabel	"Instructions"
ControlPanel_loadSettingsLabel	"Load Settings"
ControlPanel_saveSettingsLabel	"Save Settings"
ControlPanel_fontSzTrName	"Font size:"
ControlPanel_encodingTrName	"Encoding:"
ControlPanel_symsBatchSzTrName	"Batch syms"
ControlPanel_hybridResultTrName	"Hybrid Result"
ControlPanel_structuralSimTrName	"Struct Sim:"
ControlPanel_underGlyphCorrectnessTrName	"Fit under:"
ControlPanel_glyphEdgeCorrectnessTrName	"Fit edge:"
ControlPanel_asideGlyphCorrectnessTrName	"Fit aside:"
ControlPanel_moreContrastTrName	"Contrast:"
ControlPanel_gravityTrName	"Mass Center:"
ControlPanel_directionTrName	"Direction:"
ControlPanel_largerSymTrName	"Larger Symbols:"
ControlPanel_thresh4BlanksTrName	"Blanks below:"
ControlPanel_outWTrName	"Max horizontally:"
ControlPanel_outHTrName	"Max vertically:"

; Suffix of the error message presented when the font settings selected by the user cannot be processed
CannotLoadFontErrSuffix	"\n\nPlease select a different font type!\n\nSending an email to <florintulba@yahoo.com> explaining the context of this error (font name plus the error message from the black console window) would be greatly appreciated."

; Initial title of the Comparator window. It contains placeholder $(PIC2SYM_VERSION) to be replaced with the actual version of the application
Comparator_initial_title	"Pic2Sym v$(PIC2SYM_VERSION) (c) 2016, 2017 Florin Tulba"

; Status bar label for the Comparator window
Comparator_statusBar	"Press Ctrl+P for Control Panel; ESC to Exit"

; Prefixes of the title of the hourglass window while a specific operation is in progress
Controller_PREFIX_GLYPH_PROGRESS	"Processing glyphs. Please wait"
Controller_PREFIX_TRANSFORMATION_PROGRESS	"Transforming image. Please wait"

; Table headers for logging information about each approximated patch
MatchParams_HEADER	"#ssim,	#sdFg,	#sdEdge,	#sdBg,	#fg,	#bg,	#mcPaX,	#mcPaY,	#mcPX,	#mcPY,	#density"
BestMatch_HEADER	"#GlyphCode,	#ChosenScore,	"

; Text displayed within the About dialog. It contains placeholder $(PIC2SYM_VERSION) to be replaced with the actual version of the application
ControlPanel_aboutText	"\t\tPic2Sym (v$(PIC2SYM_VERSION))\n\nThis application approximates images by a grid of\ncolored symbols with colored backgrounds.\n\nFor details, please visit:\n<https://github.com/FlorinTulba/Pic2Sym>\n\nor contact the author at: <florintulba@yahoo.com>.\n\n\n(c) 2016, 2017 Florin Tulba under the GNU AGPL v3 license:\n<http://www.gnu.org/licenses/agpl-3.0.txt>"

; Text for the Instructions dialog
ControlPanel_instructionsText	"The Control Panel allows setting:\n\n- which image to be approximated by symbols from a charset\n- maximum number of symbols used horizontally & vertically\n- which font family provides these symbols\n- the desired encoding within the selected font family\n- the size of these symbols\n- how to batch the remaining symbols to gradually enhance the\n   approximation, while displaying draft results\n- the result mode: normal or hybrid (cosmeticized version)\n- a factor to encourage structural similarity\n- factors to favor better correspondence of foreground\n   (under glyph) / contours (edges of the glyph) /\n   background (around, aside glyph)\n- a factor to encourage matching symbols with large contrast\n- a factor to encourage 'gravitational' smoothness\n   (match patch 'mass center')\n- a factor to enhance directionality (match patch 'gradient')\n- a factor to favor selecting larger symbols over small ones\n- the threshold contrast of determined matching glyphs below\n   which to replace these barely visible matches with Blanks\n\nThe rudimentary sliders used here won't always show valid ranges.\nThey all must be integer, start from 0, end at least on 1.\nWhen their labels is truncated, clicking on them will help."

; Copyright note
copyrightText	"Running 'Pic2Sym' application, which approximates images by a grid of colored\nsymbols with colored backgrounds.\n\n\nThe entire project can be found at: <https://github.com/FlorinTulba/Pic2Sym>\n\nThis program is free software: you can use its results,\nredistribute it and/or modify it under the terms of the GNU\nAffero General Public License version 3 as published by the\nFree Software Foundation.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program ('agpl-3.0.txt').\nIf not, see <http://www.gnu.org/licenses/agpl-3.0.txt>."

; Line closing a C/C++ style comment started at the top of the file (Prevents reports of errors from automatic parsing when editing the file in C/C++ mode) */